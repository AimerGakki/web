1.安装node.js(包含了npm)
cmd中node -v检查node环境
npm instsall -g typescript
2.安装angular-cli
  npm install -g @angular/cli
  或者利用淘宝镜像安装
 (1) npm install -g cnpm 
  --registry=https://registry.npm.taobao.org
 (2)cnpm install -g @angular/cli
ng -v检查ng环境
3.创建一个项目
ng new my-app --skip-install
cd my-app
cnpm install
ng serve
或者
ng new my-app
cd my-app
2.建立一个组件
ng generate component helloworld
4.angular项目目录结构

node_modules        第三方依赖包存放目录
e2e                 端到端的测试目录  用来做自动测试的
src                 应用源代码目录  
.angular-cli.json   Angular命令行工具的配置文件。后期可能会去修改它，引一些其他的第三方的包  比如jquery等
karma.conf.js       karma是单元测试的执行器，karma.conf.js是karma的配置文件
package.json        这是一个标准的npm工具的配置文件，这个文件里面列出了该应用程序所使用的第三方依赖包。实际上我们在新建项目的时候，等了半天就是在下载第三方依赖包。下载完成后会放在node_modules这个目录中，后期我们可能会修改这个文件。
protractor.conf.js  也是一个做自动化测试的配置文件
README.md           说明文件
tslint.json         是tslint的配置文件，用来定义TypeScript代码质量检查的规则，不用管它

app目录               包含应用的组件和模块，我们要写的代码都在这个目录
assets目录            资源目录，存储静态资源的  比如图片
environments目录      环境配置。Angular是支持多环境开发的，我们可以在不同的环境下（开发环境，测试环境，生产环境）共用一套代码，主要用来配置环境的
index.html          整个应用的根html，程序启动就是访问这个页面
main.ts             整个项目的入口点，Angular通过这个文件来启动项目
polyfills.ts        主要是用来导入一些必要库，为了让Angular能正常运行在老版本下
styles.css          主要是放一些全局的样式
tsconfig.app.json   TypeScript编译器的配置,添加第三方依赖的时候会修改这个文件
tsconfig.spec.json  不用管
test.ts             也是自动化测试用的
typings.d.ts        不用管


@component
元数据属性：

animations - 规定这个component的动画列表
changeDetection - 通过这个component变更侦测策略；
encapsulation - 通过该component设计封装策略；
entryComponents - 一个components的列表，这个列表会动态插入进当前component的视图中。
exportAs -名下component的实例化被导出在一个模板视图中。
host - class属性映射到host元素上，并绑定了事件，属性；
inputs - 当前class属性名列表，当前components输入的数据绑定。
interpolation - 自定义改写工具，被用于当前component的视图模板上。
moduleld - 文件中ES/CommonJS 模块的id,而当前component就定义在该模块中。
outputs - 当前class属性名列表，对外暴露输出事件，这样其他components就可以调用。
providers - providers列表，该列表可以用于当前component和其子component.
queries - 将配置问题注入到当前component中。
selector - 样式选择器，它可以在一个复杂的视图模板中识别出当前component.
styleUrls - 运用在当前component中的一组样式表的url列表
styles - 样式
template - 视图模板
viewProvider - providers列表，该列表可以用于当前component，以及其子视图。
templateUrl - 视图模板的url链接


数据绑定（默认单向绑定）
1,<h1>{{xxx}}</h1>//插值绑定
2,<img [src]="imgUrl">//属性绑定
3,button (click)="do()">提交</button>//事件绑定
一、dom属性绑定
插值表达式和属性绑定是同一样东西，选用一种风格就行
html属性初始化后不能改变
dom属性可以改变
angular的模板绑定是通过dom属性和事件来工作的，而不是HTML属性

属性绑定
二、html属性绑定
1,本的Html属性绑定
语法：<td [attr.colspan]="tableColspan">C罗<td> //tableColspan的值被绑定到attr.colspan这个属性名字上。更新到html属性，浏览器根据html属性同步到dom属性，最终渲染出来。 
2,css类绑定
3情况：
1）<div class="aaa bbb" [class]="somethingExpression">something</div>//[class]="somethingExpression"将完全替换掉前面aaa bbb 的值
2）<div class="a b " [class.c]="isC">something</div>//c是一个样式类的名字，isC为true是出现[class.C]。
3）<div [naClass]="{aaa:isA,bbb:isB}"></div>//控制类名为aaa 和bbb的样式是否显示，控制多个类名
3，样式绑定(与css类绑定类似
2种情况
1)<button [style.color]="isSpecial?'red':'green'">Red</button>//控制单一内联样式
2)<div [ngStyle]="{'font-style':this.canSave?'italic':'normal'}"></div>//控制多个内联样式

三、双向绑定
两种方式
1),使用事件绑定和属性绑定
2),用ngModel指令，<input [(ngModel)]="name">{{name}}



